language: python
dist: trusty
sudo: required

services:
- docker

branches:
  except:
    - /^v\d+\.*$/
    - gh-pages
    - travis-*
    - /^untagged.*/
    - /^feature.*/
matrix:
  include:
  - python: "3.5"
    env:
    - FLAG=false
      TOXENV=py35
  - python: "3.6"
    env:
    - FLAG=true
      TOXENV=py36
      MODEL_FILE=Cartpole-$TRAVIS_BUILD_NUMBER.h5
install:
- travis_retry pip install tox

script:
- make clean test
- if [[ $FLAG == 'true' ]]; then
     make EPOCHS_TRAIN="$EPOCHS_TRAIN" MODEL_FILE="$MODEL_FILE" train;
  fi

deploy:
- provider: gcs
  skip_cleanup: true
  access_key_id: $GCS_ACCESS_KEY_ID
  secret_access_key: $GCS_SECRET_ACCESS_KEY
  bucket: "cartpole"
  local-dir: seldon/models
  on:
    branch: master
    condition: $FLAG = true

- provider: script
  skip_cleanup: true
  script: >-
    docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD" &&
    make MODEL_FILE="$MODEL_FILE" seldon-build seldon-push
  on:
    branch: master
    condition: $FLAG = true

- provider: script
  skip_cleanup: true
  script: >-
    KUBE_VERSION=$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt) &&
    curl -LO https://storage.googleapis.com/kubernetes-release/release/${KUBE_VERSION}/bin/linux/amd64/kubectl &&
    chmod +x kubectl && sudo mv kubectl /usr/local/bin/ &&
    curl https://sdk.cloud.google.com -o gcloud_install.sh && bash ./gcloud_install.sh --disable-prompts &&
    ~/google-cloud-sdk/bin/gcloud -q components install beta &&
    ~/google-cloud-sdk/bin/gcloud config set disable_usage_reporting false &&
    ~/google-cloud-sdk/bin/gcloud version &&
    echo "[Credentials]\ngs_access_key_id=${GCS_ACCESS_KEY_ID}\ngs_secret_access_key=${GCS_SECRET_ACCESS_KEY}" &&
    echo "[Credentials]\ngs_access_key_id=${GCS_ACCESS_KEY_ID}\ngs_secret_access_key=${GCS_SECRET_ACCESS_KEY}" > ~/.boto &&
    gsutil -m cp gs://cartpole/ca.cert . &&
    kubectl config set-cluster seldon-cluster --server=https://$KUBERNETES_CLUSTER_IP --certificate-authority=ca.cert &&
    kubectl config set-credentials admin/seldon-cluster --username=$KUBERNETES_USER --password=$KUBERNETES_PASSWORD &&
    kubectl config set-context seldon-cluster --namespace=default --user=admin/seldon-cluster --cluster=seldon-cluster &&
    kubectl config use-context seldon-cluster &&
    kubectl cluster-info &&
    make seldon-deploy
  on:
    branch: master
    condition: $FLAG = true
